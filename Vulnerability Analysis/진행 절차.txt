01. nmap으로 네트워크에 연결된 호스트를 스캔하고 정보를 수집한다.
  - 역할
    1) 호스트 검색: 지정된 IP 주소 범위 내에서 호스트의 유무 확인
    2) 포트 스캔: 네트워크 호스트의 포트 상태를 확인
    3) 서비스 탐지: 호스트에서 실행 중인 서비스의 버전 및 유형 식별
    4) 운영 체제 감지: 호스트의 운영 체제 종류 및 버전을 추측

02. 취약점 분석
  - Reversing: 프로그램이나 소프트웨어의 동작 원리를 이해하기 위해
                  역공학을 수행하는 과정의 의미합니다. 이는 프로그램의 
                  기능, 알고리즘, 보안 취약점 등을 분석하고 이해하는데
                  사용됩니다.
             ex) nmap을 통해 웹 서버인 Apache HTTP의 버전을 식별
                  Reversing 기법을 활용하여 프로토콜을 분석
                  취약점 분석 수행
             => CVE [보안 취약점에 대한 정보를 공유하고 표준화]
  - EXPLOIT DATABASE: 취약점에 관한 정보들을 모아두는 사이트
  - searchsploit 도구

03. Exploit 공격
  - Exploit 이해: 보안 취약점을 이용하여 시스템이나 소프트웨어를 공격하는
                     코드, 스크립트, 또는 공격법을 의미합니다.
  - Exploit은 취약점을 악용하여 다음과 같은 공격을 수행합니다.
    1) RCE: 원격으로 코드를 실행하여 시스템에 대한 제어를 획득
    2) 권한 상승: 권한 상승으로 인해 시스템을 조작
    3) 서비스 거부: 네트워크 공격을 통해 정상적인 서비스를 중단

04. 실행
  - searchsploit fuel cms 1.4 [fuel cms 1.4의 취약점 분석]
  - ls -l /user/share/exploitdb/exploits/linux/webapps/47138.py ...>
    [만약 c 코드라면 gcc를 통해 컴파일 후 gcc exploit.c -o exploit 실행]
  - python exploit.py -u <url> 옵션으로 쉘 획득
  - 문제점: 온전한 쉘을 획득하지 못함
  - 해결: Reverse Shell을 통해 온전한 쉘을 획득

05. 리버스 쉘
  - 공격자가 목표 시스템에 대해 외부에서 접근하고, 공격자의 시스템에
    쉘을 역전시켜 통신을 수행하는 형태의 쉘입니다.
    1) 포트를 열기 위해 nc -nlvp 9999 실행
    2) reverse shell chat sheet에 nc mkfifo 명령어 사용
    3) 피해자 컴퓨터가 공격자 컴퓨터로 연결하고 권한 획득
    4) Post-exploitation [시스템 침투 후에 권한을 유지하는 단계]
    5) cron으로 특정 시간마다 쉘 권한 획득 [백도어]

06. 출처
  - https://www.youtube.com/watch?v=9ZVfCYnEYZQ[Exploit]
  - https://www.exploit-db.com/exploits/50477[Python Code]
  - https://www.youtube.com/watch?v=S7izO4TOhBs[Post-Exploit]